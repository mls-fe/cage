'use strict';

var UpdateNotifier = require('update-notifier'),
    Chalk = require('chalk'),
    Yosay = require('yosay'),
    StringLength = require('string-length'),
    pkg = require('../package.json'),
    updateCheckInterval = 1000 * 60 * 60 * 24 * 7,
    notifier = UpdateNotifier({
    pkg: pkg, updateCheckInterval: updateCheckInterval
});

// from https://github.com/yeoman/yo/blob/master/lib/cli.js#L35
exports.check = function () {
    var update = notifier.update;

    if (update) {
        var newVersion = Chalk.green.bold(update.latest),
            curVersion = Chalk.gray(' (current: ' + update.current + ')'),
            command = Chalk.magenta('sudo npm install -g ' + pkg.name);

        message.push('Cage 可以更新了: ' + newVersion + curVersion);
        message.push('运行 ' + command + ' to update.');
        console.log(Yosay(message.join(' '), { maxLength: StringLength(message[0]) }));
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksY0FBYyxHQUFRLE9BQU8sQ0FBRSxpQkFBaUIsQ0FBRTtJQUNsRCxLQUFLLEdBQWlCLE9BQU8sQ0FBRSxPQUFPLENBQUU7SUFDeEMsS0FBSyxHQUFpQixPQUFPLENBQUUsT0FBTyxDQUFFO0lBQ3hDLFlBQVksR0FBVSxPQUFPLENBQUUsZUFBZSxDQUFFO0lBQ2hELEdBQUcsR0FBbUIsT0FBTyxDQUFFLGlCQUFpQixDQUFFO0lBQ2xELG1CQUFtQixHQUFHLElBQUksR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDO0lBQzdDLFFBQVEsR0FBYyxjQUFjLENBQUU7QUFDbEMsT0FBRyxFQUFILEdBQUcsRUFBRSxtQkFBbUIsRUFBbkIsbUJBQW1CO0NBQzNCLENBQUUsQ0FBQTs7O0FBR1AsT0FBTyxDQUFDLEtBQUssR0FBRyxZQUFNO0FBQ2xCLFFBQUksTUFBTSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUE7O0FBRTVCLFFBQUssTUFBTSxFQUFHO0FBQ1YsWUFBSSxVQUFVLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBRTtZQUM5QyxVQUFVLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBRSxhQUFhLEdBQUcsTUFBTSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUU7WUFDL0QsT0FBTyxHQUFNLEtBQUssQ0FBQyxPQUFPLENBQUUsc0JBQXNCLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBRSxDQUFBOztBQUVuRSxlQUFPLENBQUMsSUFBSSxrQkFBaUIsVUFBVSxHQUFHLFVBQVUsQ0FBSSxDQUFBO0FBQ3hELGVBQU8sQ0FBQyxJQUFJLFNBQVEsT0FBTyxpQkFBZSxDQUFBO0FBQzFDLGVBQU8sQ0FBQyxHQUFHLENBQUUsS0FBSyxDQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUUsR0FBRyxDQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsWUFBWSxDQUFFLE9BQU8sQ0FBRSxDQUFDLENBQUUsQ0FBRSxFQUFFLENBQUUsQ0FBRSxDQUFBO0tBQzNGO0NBQ0osQ0FBQSIsImZpbGUiOiJ1cGRhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgVXBkYXRlTm90aWZpZXIgICAgICA9IHJlcXVpcmUoICd1cGRhdGUtbm90aWZpZXInICksXG4gICAgQ2hhbGsgICAgICAgICAgICAgICA9IHJlcXVpcmUoICdjaGFsaycgKSxcbiAgICBZb3NheSAgICAgICAgICAgICAgID0gcmVxdWlyZSggJ3lvc2F5JyApLFxuICAgIFN0cmluZ0xlbmd0aCAgICAgICAgPSByZXF1aXJlKCAnc3RyaW5nLWxlbmd0aCcgKSxcbiAgICBwa2cgICAgICAgICAgICAgICAgID0gcmVxdWlyZSggJy4uL3BhY2thZ2UuanNvbicgKSxcbiAgICB1cGRhdGVDaGVja0ludGVydmFsID0gMTAwMCAqIDYwICogNjAgKiAyNCAqIDcsXG4gICAgbm90aWZpZXIgICAgICAgICAgICA9IFVwZGF0ZU5vdGlmaWVyKCB7XG4gICAgICAgIHBrZywgdXBkYXRlQ2hlY2tJbnRlcnZhbFxuICAgIH0gKVxuXG4vLyBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS95ZW9tYW4veW8vYmxvYi9tYXN0ZXIvbGliL2NsaS5qcyNMMzVcbmV4cG9ydHMuY2hlY2sgPSAoKSA9PiB7XG4gICAgbGV0IHVwZGF0ZSA9IG5vdGlmaWVyLnVwZGF0ZVxuXG4gICAgaWYgKCB1cGRhdGUgKSB7XG4gICAgICAgIGxldCBuZXdWZXJzaW9uID0gQ2hhbGsuZ3JlZW4uYm9sZCggdXBkYXRlLmxhdGVzdCApLFxuICAgICAgICAgICAgY3VyVmVyc2lvbiA9IENoYWxrLmdyYXkoICcgKGN1cnJlbnQ6ICcgKyB1cGRhdGUuY3VycmVudCArICcpJyApLFxuICAgICAgICAgICAgY29tbWFuZCAgICA9IENoYWxrLm1hZ2VudGEoICdzdWRvIG5wbSBpbnN0YWxsIC1nICcgKyBwa2cubmFtZSApXG5cbiAgICAgICAgbWVzc2FnZS5wdXNoKCBgQ2FnZSDlj6/ku6Xmm7TmlrDkuoY6ICR7bmV3VmVyc2lvbn0ke2N1clZlcnNpb259YCApXG4gICAgICAgIG1lc3NhZ2UucHVzaCggYOi/kOihjCAke2NvbW1hbmR9IHRvIHVwZGF0ZS5gIClcbiAgICAgICAgY29uc29sZS5sb2coIFlvc2F5KCBtZXNzYWdlLmpvaW4oICcgJyApLCB7IG1heExlbmd0aDogU3RyaW5nTGVuZ3RoKCBtZXNzYWdlWyAwIF0gKSB9ICkgKVxuICAgIH1cbn1cbiJdfQ==