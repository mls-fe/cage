'use strict';

var UpdateNotifier = require('update-notifier'),
    Chalk = require('chalk'),
    Yosay = require('yosay'),
    StringWidth = require('string-width'),
    pkg = require('../package.json'),
    updateCheckInterval = 1000 * 60 * 60 * 24 * 7,
    notifier = UpdateNotifier({
    pkg: pkg, updateCheckInterval: updateCheckInterval
});

// from https://github.com/yeoman/yo/blob/master/lib/cli.js#L35
exports.check = function () {
    var update = notifier.update,
        message = [];

    if (update) {
        var newVersion = Chalk.green.bold(update.latest),
            curVersion = Chalk.gray(' (current: ' + update.current + ')'),
            command = Chalk.magenta('sudo npm update -g ' + pkg.name);

        message.push('Cage 可以更新了: ' + newVersion + curVersion);
        message.push('运行 ' + command + ' 更新。');
        console.log(Yosay(message.join(' '), { maxLength: StringWidth(message[0]) }));
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksY0FBYyxHQUFRLE9BQU8sQ0FBRSxpQkFBaUIsQ0FBRTtJQUNsRCxLQUFLLEdBQWlCLE9BQU8sQ0FBRSxPQUFPLENBQUU7SUFDeEMsS0FBSyxHQUFpQixPQUFPLENBQUUsT0FBTyxDQUFFO0lBQ3hDLFdBQVcsR0FBVSxPQUFPLENBQUUsY0FBYyxDQUFFO0lBQzlDLEdBQUcsR0FBbUIsT0FBTyxDQUFFLGlCQUFpQixDQUFFO0lBQ2xELG1CQUFtQixHQUFHLElBQUksR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDO0lBQzdDLFFBQVEsR0FBYyxjQUFjLENBQUU7QUFDbEMsT0FBRyxFQUFILEdBQUcsRUFBRSxtQkFBbUIsRUFBbkIsbUJBQW1CO0NBQzNCLENBQUU7OztBQUFBLEFBR1AsT0FBTyxDQUFDLEtBQUssR0FBRyxZQUFNO0FBQ2xCLFFBQUksTUFBTSxHQUFJLFFBQVEsQ0FBQyxNQUFNO1FBQ3pCLE9BQU8sR0FBRyxFQUFFLENBQUE7O0FBRWhCLFFBQUssTUFBTSxFQUFHO0FBQ1YsWUFBSSxVQUFVLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBRTtZQUM5QyxVQUFVLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBRSxhQUFhLEdBQUcsTUFBTSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUU7WUFDL0QsT0FBTyxHQUFNLEtBQUssQ0FBQyxPQUFPLENBQUUscUJBQXFCLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBRSxDQUFBOztBQUVsRSxlQUFPLENBQUMsSUFBSSxrQkFBaUIsVUFBVSxHQUFHLFVBQVUsQ0FBSSxDQUFBO0FBQ3hELGVBQU8sQ0FBQyxJQUFJLFNBQVEsT0FBTyxVQUFRLENBQUE7QUFDbkMsZUFBTyxDQUFDLEdBQUcsQ0FBRSxLQUFLLENBQUUsT0FBTyxDQUFDLElBQUksQ0FBRSxHQUFHLENBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxXQUFXLENBQUUsT0FBTyxDQUFFLENBQUMsQ0FBRSxDQUFFLEVBQUUsQ0FBRSxDQUFFLENBQUE7S0FDMUY7Q0FDSixDQUFBIiwiZmlsZSI6InVwZGF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBVcGRhdGVOb3RpZmllciAgICAgID0gcmVxdWlyZSggJ3VwZGF0ZS1ub3RpZmllcicgKSxcbiAgICBDaGFsayAgICAgICAgICAgICAgID0gcmVxdWlyZSggJ2NoYWxrJyApLFxuICAgIFlvc2F5ICAgICAgICAgICAgICAgPSByZXF1aXJlKCAneW9zYXknICksXG4gICAgU3RyaW5nV2lkdGggICAgICAgID0gcmVxdWlyZSggJ3N0cmluZy13aWR0aCcgKSxcbiAgICBwa2cgICAgICAgICAgICAgICAgID0gcmVxdWlyZSggJy4uL3BhY2thZ2UuanNvbicgKSxcbiAgICB1cGRhdGVDaGVja0ludGVydmFsID0gMTAwMCAqIDYwICogNjAgKiAyNCAqIDcsXG4gICAgbm90aWZpZXIgICAgICAgICAgICA9IFVwZGF0ZU5vdGlmaWVyKCB7XG4gICAgICAgIHBrZywgdXBkYXRlQ2hlY2tJbnRlcnZhbFxuICAgIH0gKVxuXG4vLyBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS95ZW9tYW4veW8vYmxvYi9tYXN0ZXIvbGliL2NsaS5qcyNMMzVcbmV4cG9ydHMuY2hlY2sgPSAoKSA9PiB7XG4gICAgbGV0IHVwZGF0ZSAgPSBub3RpZmllci51cGRhdGUsXG4gICAgICAgIG1lc3NhZ2UgPSBbXVxuXG4gICAgaWYgKCB1cGRhdGUgKSB7XG4gICAgICAgIGxldCBuZXdWZXJzaW9uID0gQ2hhbGsuZ3JlZW4uYm9sZCggdXBkYXRlLmxhdGVzdCApLFxuICAgICAgICAgICAgY3VyVmVyc2lvbiA9IENoYWxrLmdyYXkoICcgKGN1cnJlbnQ6ICcgKyB1cGRhdGUuY3VycmVudCArICcpJyApLFxuICAgICAgICAgICAgY29tbWFuZCAgICA9IENoYWxrLm1hZ2VudGEoICdzdWRvIG5wbSB1cGRhdGUgLWcgJyArIHBrZy5uYW1lIClcblxuICAgICAgICBtZXNzYWdlLnB1c2goIGBDYWdlIOWPr+S7peabtOaWsOS6hjogJHtuZXdWZXJzaW9ufSR7Y3VyVmVyc2lvbn1gIClcbiAgICAgICAgbWVzc2FnZS5wdXNoKCBg6L+Q6KGMICR7Y29tbWFuZH0g5pu05paw44CCYCApXG4gICAgICAgIGNvbnNvbGUubG9nKCBZb3NheSggbWVzc2FnZS5qb2luKCAnICcgKSwgeyBtYXhMZW5ndGg6IFN0cmluZ1dpZHRoKCBtZXNzYWdlWyAwIF0gKSB9ICkgKVxuICAgIH1cbn1cbiJdfQ==