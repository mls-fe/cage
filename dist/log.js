'use strict';

//https://github.com/chalk/ansi-styles/blob/master/index
var levels = [{
    name: 'info',
    color: 'white'
}, {
    name: 'debug',
    color: 'gray'
}, {
    name: 'error',
    color: 'red',
    bold: true
}, {
    name: 'warn',
    color: 'yellow',
    bold: true
}, {
    name: 'success',
    color: 'green'
}],
    bold = [1, 22],
    colors = {
    red: [31, 39],
    green: [32, 39],
    yellow: [33, 39],
    white: [37, 39],
    gray: [90, 39]
},
    edge = '\u001b[',
    style = {},
    helper = function helper(content) {
    return '' + edge + content + 'm';
};

levels.forEach(function (level) {
    var color = colors[level.color],
        isBold = !!level.bold;

    style[level.name] = function (content) {
        var str = [content];

        str.unshift(helper(color[0]));
        str.push(helper(color[1]));

        if (isBold) {
            str.unshift(helper(bold[0]));
            str.push(helper(bold[1]));
        }

        return str.join('');
    };
});

global.log = function (content) {
    var type = arguments.length <= 1 || arguments[1] === undefined ? 'info' : arguments[1];

    if (type in style) {
        console.log(style[type](content));
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2cuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsSUFBSSxTQUFTLENBQ0w7QUFDSSxVQUFPLE1BRFg7QUFFSSxXQUFPO0FBRlgsQ0FESyxFQUtMO0FBQ0ksVUFBTyxPQURYO0FBRUksV0FBTztBQUZYLENBTEssRUFTTDtBQUNJLFVBQU8sT0FEWDtBQUVJLFdBQU8sS0FGWDtBQUdJLFVBQU87QUFIWCxDQVRLLEVBY0w7QUFDSSxVQUFPLE1BRFg7QUFFSSxXQUFPLFFBRlg7QUFHSSxVQUFPO0FBSFgsQ0FkSyxFQW1CTDtBQUNJLFVBQU8sU0FEWDtBQUVJLFdBQU87QUFGWCxDQW5CSyxDQUFiO0lBd0JJLE9BQVMsQ0FBRSxDQUFGLEVBQUssRUFBTCxDQXhCYjtJQXlCSSxTQUFTO0FBQ0wsU0FBUSxDQUFFLEVBQUYsRUFBTSxFQUFOLENBREg7QUFFTCxXQUFRLENBQUUsRUFBRixFQUFNLEVBQU4sQ0FGSDtBQUdMLFlBQVEsQ0FBRSxFQUFGLEVBQU0sRUFBTixDQUhIO0FBSUwsV0FBUSxDQUFFLEVBQUYsRUFBTSxFQUFOLENBSkg7QUFLTCxVQUFRLENBQUUsRUFBRixFQUFNLEVBQU47QUFMSCxDQXpCYjtJQWdDSSxPQUFTLFNBaENiO0lBaUNJLFFBQVMsRUFqQ2I7SUFrQ0ksU0FBUyxTQUFULE1BQVM7QUFBQSxnQkFBYyxJQUFkLEdBQXFCLE9BQXJCO0FBQUEsQ0FsQ2I7O0FBb0NBLE9BQU8sT0FBUCxDQUFnQixpQkFBUztBQUNyQixRQUFJLFFBQVMsT0FBUSxNQUFNLEtBQWQsQ0FBYjtRQUNJLFNBQVMsQ0FBQyxDQUFDLE1BQU0sSUFEckI7O0FBR0EsVUFBTyxNQUFNLElBQWIsSUFBc0IsbUJBQVc7QUFDN0IsWUFBSSxNQUFNLENBQUUsT0FBRixDQUFWOztBQUVBLFlBQUksT0FBSixDQUFhLE9BQVEsTUFBTyxDQUFQLENBQVIsQ0FBYjtBQUNBLFlBQUksSUFBSixDQUFVLE9BQVEsTUFBTyxDQUFQLENBQVIsQ0FBVjs7QUFFQSxZQUFLLE1BQUwsRUFBYztBQUNWLGdCQUFJLE9BQUosQ0FBYSxPQUFRLEtBQU0sQ0FBTixDQUFSLENBQWI7QUFDQSxnQkFBSSxJQUFKLENBQVUsT0FBUSxLQUFNLENBQU4sQ0FBUixDQUFWO0FBQ0g7O0FBRUQsZUFBTyxJQUFJLElBQUosQ0FBVSxFQUFWLENBQVA7QUFDSCxLQVpEO0FBYUgsQ0FqQkQ7O0FBbUJBLE9BQU8sR0FBUCxHQUFhLFVBQUUsT0FBRixFQUE4QjtBQUFBLFFBQW5CLElBQW1CLHlEQUFaLE1BQVk7O0FBQ3ZDLFFBQUssUUFBUSxLQUFiLEVBQXFCO0FBQ2pCLGdCQUFRLEdBQVIsQ0FBYSxNQUFPLElBQVAsRUFBZSxPQUFmLENBQWI7QUFDSDtBQUNKLENBSkQiLCJmaWxlIjoibG9nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9odHRwczovL2dpdGh1Yi5jb20vY2hhbGsvYW5zaS1zdHlsZXMvYmxvYi9tYXN0ZXIvaW5kZXhcbmxldCBsZXZlbHMgPSBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWUgOiAnaW5mbycsXG4gICAgICAgICAgICBjb2xvcjogJ3doaXRlJ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lIDogJ2RlYnVnJyxcbiAgICAgICAgICAgIGNvbG9yOiAnZ3JheSdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZSA6ICdlcnJvcicsXG4gICAgICAgICAgICBjb2xvcjogJ3JlZCcsXG4gICAgICAgICAgICBib2xkIDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lIDogJ3dhcm4nLFxuICAgICAgICAgICAgY29sb3I6ICd5ZWxsb3cnLFxuICAgICAgICAgICAgYm9sZCA6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZSA6ICdzdWNjZXNzJyxcbiAgICAgICAgICAgIGNvbG9yOiAnZ3JlZW4nXG4gICAgICAgIH1cbiAgICBdLFxuICAgIGJvbGQgICA9IFsgMSwgMjIgXSxcbiAgICBjb2xvcnMgPSB7XG4gICAgICAgIHJlZCAgIDogWyAzMSwgMzkgXSxcbiAgICAgICAgZ3JlZW4gOiBbIDMyLCAzOSBdLFxuICAgICAgICB5ZWxsb3c6IFsgMzMsIDM5IF0sXG4gICAgICAgIHdoaXRlIDogWyAzNywgMzkgXSxcbiAgICAgICAgZ3JheSAgOiBbIDkwLCAzOSBdXG4gICAgfSxcbiAgICBlZGdlICAgPSAnXFx1MDAxYlsnLFxuICAgIHN0eWxlICA9IHt9LFxuICAgIGhlbHBlciA9IGNvbnRlbnQgPT4gYCR7ZWRnZX0ke2NvbnRlbnR9bWBcblxubGV2ZWxzLmZvckVhY2goIGxldmVsID0+IHtcbiAgICBsZXQgY29sb3IgID0gY29sb3JzWyBsZXZlbC5jb2xvciBdLFxuICAgICAgICBpc0JvbGQgPSAhIWxldmVsLmJvbGRcblxuICAgIHN0eWxlWyBsZXZlbC5uYW1lIF0gPSBjb250ZW50ID0+IHtcbiAgICAgICAgbGV0IHN0ciA9IFsgY29udGVudCBdXG5cbiAgICAgICAgc3RyLnVuc2hpZnQoIGhlbHBlciggY29sb3JbIDAgXSApIClcbiAgICAgICAgc3RyLnB1c2goIGhlbHBlciggY29sb3JbIDEgXSApIClcblxuICAgICAgICBpZiAoIGlzQm9sZCApIHtcbiAgICAgICAgICAgIHN0ci51bnNoaWZ0KCBoZWxwZXIoIGJvbGRbIDAgXSApIClcbiAgICAgICAgICAgIHN0ci5wdXNoKCBoZWxwZXIoIGJvbGRbIDEgXSApIClcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBzdHIuam9pbiggJycgKVxuICAgIH1cbn0gKVxuXG5nbG9iYWwubG9nID0gKCBjb250ZW50LCB0eXBlID0gJ2luZm8nICkgPT4ge1xuICAgIGlmICggdHlwZSBpbiBzdHlsZSApIHtcbiAgICAgICAgY29uc29sZS5sb2coIHN0eWxlWyB0eXBlIF0oIGNvbnRlbnQgKSApXG4gICAgfVxufVxuIl19